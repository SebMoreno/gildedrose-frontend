pipeline {
  agent any
  stages{
    stage("Build image") {
       steps {
          sh '''
              CONTAINERS_TO_STOP=docker ps -a | grep -v "db" | awk 'NR>1 {print $1}'
              if ! [ -z "$CONTAINERS_TO_STOP" ]
              then
                docker container stop $CONTAINERS_TO_STOP
              fi
              docker container prune -f
              BD_IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' db)
              API_CONTAINER_ID=$(docker run -d --name backend     -e DATABASE_HOST_IP=$BD_IP  -p 9090:8080 sebmoreno/gildedrose-backend)
              API_IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $API_CONTAINER_ID)
              docker run -d --name frontend    -e API_HOST_URL=$API_IP -e API_HOST_PORT=8080 -p 80:80     sebmoreno/gildedrose-frontend
          '''
       }
    }
  }
}
